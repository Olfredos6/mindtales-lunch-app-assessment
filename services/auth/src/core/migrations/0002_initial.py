# Generated by Django 4.0 on 2022-03-06 08:25

import django.contrib.auth.models
import django.contrib.postgres.fields.citext
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_postgres_extensions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True,
                                           primary_key=True, serialize=False, verbose_name='ID')),  # noqa: E501
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),  # noqa: E501
                ('first_name', models.CharField(blank=True,
                                                max_length=150, verbose_name='first name')),  # noqa: E501
                ('last_name', models.CharField(blank=True,
                                               max_length=150, verbose_name='last name')),  # noqa: E501
                ('email', django.contrib.postgres.fields.citext.CIEmailField(error_messages={  # noqa: E501
                 'unique': 'A user with that email address already exists.'}, max_length=254, unique=True, verbose_name='email address')),  # noqa: E501
                ('doc', models.DateTimeField(
                    default=django.utils.timezone.now, verbose_name='date joined')),  # noqa: E501
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',  # noqa: E501
                                                  related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),  # noqa: E501
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',  # noqa: E501
                                                            related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),  # noqa: E501
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
